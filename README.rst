``django-lockout`` is a cache-based Django app that locks out users after too
many failed login attempts. Because ``django-lockout`` tracks login attempts
in your site's cache, it is fast and lightweight. It is intended for Django
sites where protection against brute force attacks is desired with no
additional database overhead.

With ``django-lockout`` you can user ``lockout.decorators.enforce_lockout``
to wrap ``django.contrib.auth.view.login`` or your login function to check
for failed login attempts. This decorator raises ``lockout.LockedOut``
when too many login attempts occur. Your middleware are
responsible for catching and handling ``LockedOut`` however you deem
appropriate.

Login attempts can be tracked by IP only or by IP plus user-agent.

Requirements 
============ 
``django-lockout`` requires and has been tested with Django 1.3 and Python
versions 2.4 through 2.7. It should work with earlier versions of Django but
this is untested, as the test suite relies on
``django.test.client.RequestFactory``. If you use ``django-lockout`` with an
earlier version of Django than 1.3, you should not add ``'lockout'`` to your
``INSTALLED_APPS`` to prevent running the test suite.

``django-lockout`` requires that you have enabled a cache for your site.

Installation
============
You can install ``django-lockout`` with::

    pip install django-lockout

or::

    easy_install django-lockout
 
Decorate your login function with ``lockout.decorators.enforce_lockout``
and write middleware to catch ``LockedOut`` exception.

Adding ``'lockout'`` to your ``INSTALLED_APPS`` is only required if you want to
run ``django-lockout``'s test suite.
    
If you need to clear the record of failed attempts for an IP or IP plus
user-agent, call ``lockout.reset_attempts``, passing the ``request`` for that
IP or IP plus user-agent::

    reset_attempts(request)
    
    
Settings
========

LOCKOUT_MAX_ATTEMPTS
    The maximum number of login attempts before the IP or IP plus user-agent
    is locked out. Default: ``5``.

LOCKOUT_TIME
    The number of seconds the IP or IP plus user-agent should be locked out.
    Default: ``600`` (10 minutes).

LOCKOUT_ENFORCEMENT_WINDOW
    The number of seconds before the failed login attempts are reset and the
    IP or IP plus user-agent gets a fresh start. Default: ``300`` (5 minutes).
    
    ``LOCKOUT_ENFORCEMENT_WINDOW`` affects failed login attempts up to the max
    allowed, while ``LOCKOUT_TIME`` takes effect when the max attempts is
    reached. For example, with a ``LOCKOUT_ENFORCEMENT_WINDOW`` of 5 minutes,
    suppose a user has a failed login attempt, followed by another failed
    login attempt 3 minutes later. Both attempts will count toward the
    maximum. However, if the 5-minute mark (from the first failed attempt) is
    reached with fewer than the max allowed attempts, the failures will expire
    and the user will once again be allowed the maximum attempts. If the user
    exceeds the max within the ``LOCKOUT_ENFORCEMENT_WINDOW``, the user will
    be locked out for ``LOCKOUT_TIME`` seconds.

LOCKOUT_USE_USER_AGENT
    Whether to track failed login attempts by IP plus user-agent, instead of
    by IP only. Default: ``False``.

LOCKOUT_CACHE_PREFIX
    The prefix for cache keys generated by ``django-lockout``. Default: ``'lockout'``.
